version: '3'
services:
  mongo-rs0-1:
    image: "mongo:3.4.1"
    container_name: mongo-rs0-1
    build: ./docker/mongo-rs0-1
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data/mongo-rs0-1/data:/data/db
    depends_on:
      - "mongo-rs0-2"
      - "mongo-rs0-3"
    networks:
      - otaras

  mongo-rs0-2:
    image: "mongo:3.4.1"
    container_name: mongo-rs0-2
    command: --replSet rs0 --smallfiles --oplogSize 128
    ports:
      - "27018:27017"
    volumes:
      - ./mongo-data/mongo-rs0-2/data:/data/db
    networks:
      - otaras

  mongo-rs0-3:
    image: "mongo:3.4.1"
    container_name: mongo-rs0-3
    command: --replSet rs0 --smallfiles --oplogSize 128
    ports:
      - "27019:27017"
    volumes:
      - ./mongo-data/mongo-rs0-3/data:/data/db
    networks:
      - otaras

  setup-rs:
    image: "setup-rs"
    container_name: setup-rs
    build: ./docker/setup
    depends_on:
      - "mongo-rs0-1"
    networks:
      - otaras


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.0
    container_name: elasticsearch
    environment:
      - cluster.name=elasticsearch
      - xpack.security.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - otaras

  abc:
    image: appbaseio/abc
    container_name: abc
    networks:
      - otaras

volumes:
  mongo-rs0-1:
  mongo-rs0-2:
  mongo-rs0-3:
  setup-rs:
  elasticsearch:
    driver: local
networks:
  otaras:
